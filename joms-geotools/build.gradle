apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: "com.github.johnrengelman.shadow"
//apply plugin: 'com.github.johnrengelman.shadow'

version = '1.0-SNAPSHOT'
sourceCompatibility = '1.6'

buildscript {
  repositories { jcenter()
    maven {
      name 'Shadow'
      url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins'
    }

  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:1.2.0"
  }
}
test {
  testLogging {
    events 'started', 'passed'
  }
}

install {
  repositories.mavenInstaller {
    pom.groupId = "org.ossim"
    // only necessary if artifact ID diverges from project name
    // the latter defaults to project directory name and can be
    // configured in settings.gradle
    pom.artifactId = 'joms-geotools'
    // shouldn't be needed as this is the default anyway
    pom.packaging = 'jar'
  }
}

repositories {
  maven {
    url 'http://repository.cloudera.com/artifactory/cloudera-repos/'
  }
  maven {
    url 'http://repo.boundlessgeo.com/main'
  }
  maven {
    url 'http://download.osgeo.org/webdav/geotools'
  }
  maven {
    url 'maven2-repository.dev.java.net'
  }
  maven {
    url 'http://maven.geo-solutions.it'
  }
  maven {
    url 'https://artifacts.unidata.ucar.edu/content/repositories/unidata/'
  }
  maven {
   url  'http://www.hibernatespatial.org/repository'
  }
  mavenLocal()
  mavenCentral()
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.12'
 // testCompile 'org.apache.hadoop:hadoop-hdfs:2.0.0-cdh4.2.0'
  testCompile 'org.apache.hadoop:hadoop-client:2.0.0-cdh4.5.0'
  testCompile 'org.apache.accumulo:accumulo-core:1.5.0'
  testCompile 'com.github.davidmoten:geo:0.6.10'
//  testCompile 'org.apache.hadoop:hadoop-hdfs:2.0.0'
//  testCompile 'org.apache.hadoop:hadoop-client:2.0.0'
//  testCompile 'org.apache.hadoop:hadoop-common:2.0.0'

  testCompile 'org.ossim:joms:1.8.19'
  compile 'org.geoscript:geoscript-groovy:1.4.0'
  compile 'org.ossim:joms:1.8.19'
  compile group: 'junit', name: 'junit', version: '4.12'
  compile 'org.apache.accumulo:accumulo-core:1.5.0'
  compile 'com.github.davidmoten:geo:0.6.10'
  compile 'org.postgresql:postgresql:9.3-1100-jdbc4'
//  testCompile 'org.apache.hadoop:hadoop-hdfs:2.0.0-cdh4.2.0'
  compile 'org.apache.hadoop:hadoop-client:2.0.0-cdh4.5.0'
  compile 'org.hibernate:hibernate-core:4.3.8.Final'
  compile 'org.hibernate:hibernate-spatial:4.3'
  compile 'org.springframework:spring-core:4.1.4.RELEASE'
  compile 'org.springframework:spring-context:4.1.4.RELEASE'
  compile 'org.springframework:spring-orm:4.1.4.RELEASE'
  compile 'org.springframework:spring-tx:4.1.4.RELEASE'
  compile 'javax.validation:validation-api:1.1.0.Final'
//  compile 'org.apache.hadoop:hadoop-hdfs:2.0.0'
//  compile 'org.apache.hadoop:hadoop-client:2.0.0'
//  compile 'org.apache.hadoop:hadoop-common:2.0.0'
}

task listJars << {
  configurations.compile.each { File file -> println file.name }
}

task createRunScript << {

  def file = new File("run.sh")
  file.delete()
  file << "java -cp build/libs/joms-geotools-1.0-SNAPSHOT.jar:${sourceSets.main.runtimeClasspath.join(":")} \$1"

}

sourceSets{
  main{
    java{
      srcDir "src/main"
    }
    resources{
      srcDir  "src/main/resources"
    }
  }
  test{
    groovy{
      srcDir "test/groovy"
    }
  }
 }


tasks.withType(Test) {
  // get System properties needed for tests
  systemProperties = System.getProperties()
  systemProperties['WORLD_IMAGE_FILE'] = "/data/earth.ntf"
  //systemProperties = System.getProperties()
  //systemProperties = System.properties
  //println 'NUMBER_OF_PROCESSORS is ' +
  //        systemProperties['NUMBER_OF_PROCESSORS'] // always returns 1
}

task runTest(dependsOn: [build]) << {
  println 'running unit tests'
}

mainClassName = "joms.geotools.tileapi.app.TileCacheApp"

shadowJar {
  zip64 true
  mergeServiceFiles()
}
jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
}
